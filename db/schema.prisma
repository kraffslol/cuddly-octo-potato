datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model Team {
  id             String       @id @default(cuid())
  name           String
  members        Membership[]
  currentMembers User[]
}

model Membership {
  id   Int            @id @default(autoincrement())
  role MembershipRole

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  invitedName  String?
  invitedEmail String?

  @@unique([teamId, invitedEmail])
}

model User {
  id             String     @id @default(cuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  name           String
  email          String     @unique
  hashedPassword String?
  role           GlobalRole @default(USER)

  currentTeam   Team   @relation(fields: [currentTeamId], references: [id])
  currentTeamId String

  tokens      Token[]
  sessions    Session[]
  memberships Membership[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([hashedToken, type])
}

enum GlobalRole {
  USER
}

enum MembershipRole {
  OWNER
  ADMIN
  USER
}

enum TokenType {
  RESET_PASSWORD
}
